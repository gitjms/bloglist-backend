{"version":3,"sources":["services/blogs.js","reducers/blogReducer.js","reducers/messageReducer.js","reducers/filterReducer.js","store.js","components/ErrorMessage.js","services/login.js","components/BlogForm.js","components/LoginForm.js","components/Blog.js","components/Blogs.js","components/Filter.js","components/Footer.js","components/Togglable.js","App.js","index.js"],"names":["token","getAll","a","request","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","remove","delete","setToken","newToken","initializeBlogs","dispatch","blogService","blogs","type","createBlog","blog","newBlog","deleteBlog","deletedBlog","likeBlog","likes","returnedContent","changedBlog","state","find","n","findById","blogReducer","action","map","timeOutList","setMessage","text","time","forEach","tout","clearTimeout","messageChange","push","setTimeout","messageReducer","filterReducer","content","reducer","combineReducers","message","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","then","ErrorMessage","useSelector","style","color","background","fontSize","borderStyle","borderRadius","padding","marginTop","marginBottom","login","credentials","BlogForm","useState","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","className","onSubmit","event","preventDefault","title","author","url","align","htmlFor","value","onChange","target","float","LoginForm","loginUser","username","setUsername","password","setPassword","name","compareLikes","b","mapDispatchToProps","connect","sort","toLowerCase","includes","props","useParams","onClick","user","setVisible","history","goBack","Blogs","hideWhenVisible","display","visible","showWhenVisible","key","to","path","Filter","useDispatch","filterChange","Footer","fontStyle","Togglable","React","forwardRef","ref","scroller","require","animateScroll","toggleVisibility","scrollToTop","useImperativeHandle","role","buttonLabel","children","displayName","App","useEffect","errorMessage","setErrorMessage","setUser","blogFormRef","useRef","loginFormRef","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","loginObject","loginService","setItem","stringify","handleLogout","clear","exception","location","reload","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15f58669.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const request = axios.get(baseUrl)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.post(baseUrl, newObject, config)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst remove = async id => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken }\r\n","import blogService from '../services/blogs'\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blog) => {\r\n  return async dispatch => {\r\n    const newBlog = await blogService.create(blog)\r\n    dispatch({\r\n      type: 'NEW_BLOG',\r\n      data: newBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (id) => {\r\n  return async dispatch => {\r\n    const deletedBlog = await blogService.remove(id)\r\n    dispatch({\r\n      type: 'DELETE_BLOG',\r\n      data: deletedBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blog) => {\r\n  return async dispatch => {\r\n    const returnedContent = await blogService.update(\r\n      blog.id, { ...blog, likes: blog.likes + 1 })\r\n    dispatch({\r\n      type: 'LIKE_BLOG',\r\n      data: returnedContent\r\n    })\r\n  }\r\n}\r\n\r\nconst findById = (state, id) => {\r\n  return state.find(n => n.id === id)\r\n}\r\n\r\nconst changedBlog = (state, id, likes) => {\r\n  return {\r\n    ...findById(state, id),\r\n    likes: likes\r\n  }\r\n}\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch(action.type) {\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  case 'NEW_BLOG':\r\n    return [...state, action.data]\r\n  case 'DELETE_BLOG':\r\n    return [...state, action.data]\r\n  case 'LIKE_BLOG':\r\n    return state.map(blog =>\r\n      blog.id !== action.data.id ? blog : changedBlog(state, action.data.id, action.data.likes)\r\n    )\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default blogReducer","let timeOutList = []\r\n\r\nexport const setMessage = (text, time) => {\r\n  timeOutList.forEach(tout => typeof tout === 'number' ? clearTimeout(tout) : tout)\r\n  return async dispatch => {\r\n    await dispatch(messageChange(text))\r\n    timeOutList.push(setTimeout(() => {\r\n      dispatch(messageChange(null))\r\n      timeOutList = []\r\n    }, 1000*time))\r\n  }\r\n}\r\n\r\nexport const messageChange = (text) => {\r\n  return {\r\n    type: 'SET_MESSAGE',\r\n    text\r\n  }\r\n}\r\n\r\nconst messageReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'SET_MESSAGE':\r\n    return action.text\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default messageReducer","export const filterChange = ( type, content ) => {\r\n  return {\r\n    type: 'SET_FILTER',\r\n    content\r\n  }\r\n}\r\n\r\nconst filterReducer = (state = 'ALL', action) => {\r\n  switch (action.type) {\r\n  case 'SET_FILTER':\r\n    return {\r\n      type: action.type,\r\n      content: action.content\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default filterReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport blogReducer, { initializeBlogs } from './reducers/blogReducer'\r\nimport messageReducer from './reducers/messageReducer'\r\nimport filterReducer from './reducers/filterReducer'\r\nimport blogService from './services/blogs'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  message: messageReducer,\r\n  filter: filterReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nblogService.getAll().then(blogs =>\r\n  store.dispatch(initializeBlogs(blogs))\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ErrorMessage = () => {\r\n  const message = useSelector(({ message }) => {\r\n    if ( message !== null ) {\r\n      return message\r\n    }\r\n    return null\r\n  })\r\n\r\n  const errorMessageStyle = {\r\n    color: 'rgb(255, 0, 0)',\r\n    background: 'lightgray',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  }\r\n\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div style={errorMessageStyle} >\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n\r\n  BlogForm.propTypes = {\r\n    addBlog: PropTypes.func.isRequired,\r\n    handleTitleChange: PropTypes.func.isRequired,\r\n    handleUrlChange: PropTypes.func.isRequired,\r\n    handleAuthorChange: PropTypes.func.isRequired,\r\n    newTitle: PropTypes.string.isRequired,\r\n    newUrl: PropTypes.string.isRequired\r\n  }\r\n\r\n  const [ newTitle, setNewTitle ] = useState('')\r\n  const [ newAuthor, setNewAuthor ] = useState('')\r\n  const [ newUrl, setNewUrl ] = useState('')\r\n\r\n  const handleTitleChange = (event) => { setNewTitle(event.target.value) }\r\n  const handleAuthorChange = (event) => { setNewAuthor(event.target.value) }\r\n  const handleUrlChange = (event) => { setNewUrl(event.target.value) }\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    createBlog({\r\n      title: newTitle,\r\n      author: newAuthor,\r\n      url: newUrl\r\n    })\r\n\r\n    setNewTitle('')\r\n    setNewAuthor('')\r\n    setNewUrl('')\r\n  }\r\n\r\n  return (\r\n    <div className='col-auto' id='boxed'>\r\n      <br />\r\n      <b>Add a new blog</b>\r\n      <form onSubmit={addBlog}>\r\n        <div align='left' className='form-group'>\r\n          <label id='formlabel' htmlFor='title'>title:</label>\r\n          <input id='title' type='text' className='form-control'\r\n            value={newTitle}\r\n            onChange={handleTitleChange}\r\n          />\r\n        </div>\r\n        <div align='left' className='form-group'>\r\n          <label id='formlabel' htmlFor='author'>author:</label>\r\n          <input id='author' type='text' className='form-control'\r\n            value={newAuthor}\r\n            onChange={handleAuthorChange}\r\n          />\r\n        </div>\r\n        <div align='left' className='form-group'>\r\n          <label id='formlabel' htmlFor='url'>url:</label>\r\n          <input id='url' type='text' className='form-control'\r\n            value={newUrl}\r\n            onChange={handleUrlChange}\r\n          />\r\n        </div>\r\n        <div align='left' className='form-group'>\r\n          <button className='btn btn-primary' id='add-button' type='submit'\r\n            style={{ float: 'left', marginTop: '12px' }}>\r\n            add\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst LoginForm = ({ loginUser }) => {\r\n\r\n  LoginForm.propTypes = {\r\n    handleLogin: PropTypes.func.isRequired,\r\n    handleUsernameChange: PropTypes.func.isRequired,\r\n    handlePasswordChange: PropTypes.func.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    password: PropTypes.string.isRequired\r\n  }\r\n\r\n  const [ username, setUsername ] = useState('')\r\n  const [ password, setPassword ] = useState('')\r\n\r\n  const handleUsernameChange = (event) => { setUsername(event.target.value) }\r\n  const handlePasswordChange = (event) => { setPassword(event.target.value) }\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n    loginUser({\r\n      username: username,\r\n      password: password\r\n    })\r\n\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div className='form-group-inline'>\r\n      <form onSubmit={handleLogin}>\r\n        <div align='left' className='form-group-inline'>\r\n          <label id='formlabel' htmlFor='username'>username:</label>\r\n          <input id='username' type='text' className='form-control' name='Username'\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n          <label id='formlabel' htmlFor='password'>password:</label>\r\n          <input id='password' type='text' className='form-control' name='Password'\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button className='btn btn-primary' id='login-button' type='submit' style={{ float: 'left' }}>login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { likeBlog, deleteBlog } from '../reducers/blogReducer'\r\nimport { setMessage } from '../reducers/messageReducer'\r\n\r\nconst Blog = ({ props }) => {\r\n  const id = useParams().id\r\n\r\n  const blog = props.blogs.find(n => n.id === id)\r\n\r\n  return(\r\n    <div>\r\n      <li className='list-group-item'>\r\n        {blog.title} by {blog.author}\r\n      </li>\r\n      <br />\r\n      <li className='list-group-item'>\r\n        {blog.url}\r\n      </li>\r\n      <li className='list-group-item'>\r\n        has {blog.likes}\r\n        <button type='button' className='btn btn-success' id='like-button'\r\n          onClick={() => {\r\n            likeBlog(blog.id)\r\n            setMessage(`you liked '${blog.content}'`,5)\r\n          }}>like</button>\r\n      </li>\r\n      <li className='list-group-item'>\r\n        added by {blog.user.name}\r\n        { props.user.name === blog.user.name &&\r\n          <button type='button' id='delete-button' className='btn btn-warning'\r\n            onClick={() => {\r\n              deleteBlog(blog.id)\r\n              setMessage(`you deleted '${blog.content}'`,5)\r\n            }}>delete</button>\r\n        }\r\n      </li>\r\n      <li className='list-group-item'>\r\n        <button type='button' className='btn btn-primary'\r\n          onClick={() => {\r\n            props.setVisible(false)\r\n            props.history.goBack()\r\n            props.history = []\r\n          }} >back\r\n        </button>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction compareLikes(a, b) {\r\n  return b.likes - a.likes\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  if ( state.filter === 'ALL' ) {\r\n    return { blogs: state.blogs.sort(compareLikes) }\r\n  }\r\n  return {\r\n    blogs: state.blogs.filter(blog => blog.content.toLowerCase()\r\n      .includes(state.filter.content.toLowerCase())).sort(compareLikes)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  likeBlog,\r\n  deleteBlog,\r\n  setMessage\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Blog)\r\n","import React from 'react'\r\nimport { Switch, Route, Link } from 'react-router-dom'\r\nimport Blog from './Blog'\r\n\r\nconst Blogs = (props) => {\r\n\r\n  const hideWhenVisible = { display: props.visible ? 'none' : '' }\r\n  const showWhenVisible = { display: props.visible ? '' : 'none' }\r\n\r\n  return (\r\n    <>\r\n      <div style={hideWhenVisible}>\r\n        <h2>Blogs</h2>\r\n        <ul>\r\n          {props.blogs.map(blog =>\r\n            <li key={blog.id}>\r\n              <Link\r\n                to={`/blogs/${blog.id}`}\r\n                onClick={() => {\r\n                  props.setVisible(true)\r\n                  props.history.push('/')\r\n                }}>\r\n                {blog.title}\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        <Switch>\r\n          <Route path=\"/blogs/:id\">\r\n            <Blog props={ props } />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Blogs","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { filterChange } from '../reducers/filterReducer'\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (event) => {\r\n    event.preventDefault()\r\n    const content = event.target.value\r\n    dispatch(filterChange('SET_FILTER',content))\r\n  }\r\n\r\n  return (\r\n    <div className='col-auto'>\r\n      <form onChange={handleChange}>\r\n        <label htmlFor='filter'>filter shown with:</label>\r\n        <input name='filter' type='text' className='form-control' />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'gray',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <hr />\r\n      <center>\r\n        <em>Bloglist app, Full Stack Web Development</em>\r\n        <br />\r\n        <em>University of Helsinki 2020</em>\r\n      </center>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n\r\n  Togglable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n  }\r\n\r\n  const Scroll = require('react-scroll')\r\n  const scroller = Scroll.animateScroll\r\n\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n    if (visible) {\r\n      scroller.scrollToTop()\r\n    }\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className='btn-group' role='group'>\r\n      <div style={hideWhenVisible}>\r\n        <button className='btn btn-primary'type='submit'\r\n          onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className='togglableContent'>\r\n        {props.children}\r\n        <button className='btn btn-primary'type='submit' style={{ float: 'right' }}\r\n          onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import React, { useState, useEffect, useRef } from 'react'\n\nimport ErrorMessage from './components/ErrorMessage'\n// import Message from './components/Message'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/LoginForm'\n\nimport Blogs from './components/Blogs'\n// import Blog from './components/Blog'\nimport Filter from './components/Filter'\nimport Footer from './components/Footer'\nimport Togglable from './components/Togglable'\n\nimport { initializeBlogs, createBlog } from './reducers/blogReducer'\nimport { useDispatch } from 'react-redux'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  // const [ blogs, setBlogs ] = useState([])\n  // const [ showAll, setShowAll ] = useState(true)\n  // const [ titleToFind, setShowTitleToFind ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  // const [ message, setMessage ] = useState(null)\n  const [ user, setUser ] = useState(null)\n\n  const blogFormRef = useRef()\n  const loginFormRef = useRef()\n\n  // const Scroll = require('react-scroll')\n  // const scroller = Scroll.animateScroll\n\n  // useEffect(() => {\n  //   blogService\n  //     .getAll()\n  //     .then(initialBlogs => {\n  //       setBlogs(initialBlogs)\n  //     })\n  // }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (loginObject) => {\n    if (loginObject.username === '' || loginObject.password === '') {\n      setErrorMessage('both fields are required')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 4000)\n    } else {\n      try {\n        const user = await loginService.login(loginObject)\n        window.localStorage.setItem('loggedBloglistappUser', JSON.stringify(user))\n        blogService.setToken(user.token)\n        setUser(user)\n      } catch (exception) {\n        setErrorMessage('wrong username or password')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 4000)\n      }\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    try {\n      setUser(null)\n      window.localStorage.clear()\n    } catch (exception) {\n      setErrorMessage(`${exception}`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 4000)\n    }\n    window.location.reload()\n    console.log('logged out successfully')\n  }\n\n  // const handleFindTitleChange = (event) => { setShowTitleToFind(event.target.value) }\n  // const setTitleToFind = (event) => {\n  //   event.preventDefault()\n  //   if (titleToFind!=='') {\n  //     setShowAll(false)\n  //   }\n  // }\n\n  // function compareNumbers(a, b) {\n  //   return b.likes - a.likes\n  // }\n\n  // const blogsToShow = showAll\n  //   ? blogs.sort(compareNumbers)\n  //   : blogs.filter(blog => blog.title.toLowerCase()\n  //     .includes(titleToFind.toLowerCase())).sort(compareNumbers)\n\n  // const rows = () => blogsToShow.map(blog =>\n  //   <Blog\n  //     key={blog.id}\n  //     user={user}\n  //     blog={blog}\n  //     likeBlog={() => likeBlogOf(blog.id)}\n  //     deleteBlog={() => deleteBlogOf(blog.id)}\n  //   />\n  // )\n\n  // const addBlog = (blogObject) => {\n  //   blogFormRef.current.toggleVisibility()\n  //   blogService\n  //     .create(blogObject)\n  //     .then(() => {\n  //       blogService\n  //         .getAll()\n  //         .then(blogs => {\n  //           setBlogs(blogs)\n  //         })\n  //     }, [])\n  //     .catch(() => {\n  //       setErrorMessage('fields title and url are required, url must be unique')\n  //       setTimeout(() => {\n  //         setErrorMessage(null)\n  //       }, 4000)\n  //     })\n  //   setMessage(`added \\`${blogObject.title}\\``)\n  //   setTimeout(() => {\n  //     setMessage(null)\n  //   }, 4000)\n  // }\n\n  // const likeBlogOf = (id) => {\n  //   const blog = blogs.find(n => n.id === id)\n  //   const changedBlog = {\n  //     user: blog.user.id,\n  //     likes: blog.likes + 1,\n  //     author: blog.author,\n  //     title: blog.title,\n  //     url: blog.url\n  //   }\n\n  //   blogService\n  //     .update(blog.id, changedBlog)\n  //     .then(returnedBlog => {\n  //       setBlogs(blogs.map(\n  //         oldblog => oldblog.id !== blog.id\n  //           ? oldblog\n  //           : returnedBlog\n  //       ))\n  //     })\n  //     .catch(error => {\n  //       scroller.scrollToTop()\n  //       setErrorMessage(`${error}`)\n  //       setTimeout(() => {\n  //         setErrorMessage(null)\n  //       }, 4000)\n  //       setBlogs(blogs.filter(n => n.id !== blog.id))\n  //     })\n  // }\n\n  // const deleteBlogOf = id => {\n  //   const blog = blogs.find(n => n.id === id)\n\n  //   if (window.confirm(`Delete \\`${blog.title}\\`?`)) {\n  //     blogService\n  //       .remove(id, blog)\n  //       .then(() => {\n  //         setBlogs(blogs.filter(n => n.id !== id))\n  //         scroller.scrollToTop()\n  //         setMessage(`deleted \\`${blog.title}\\``)\n  //         setTimeout(() => {\n  //           setMessage(null)\n  //         }, 4000)\n  //       })\n  //       .catch(error => {\n  //         scroller.scrollToTop()\n  //         setErrorMessage(`${error}`)\n  //         setTimeout(() => {\n  //           setErrorMessage(null)\n  //         }, 4000)\n  //       })\n  //   }\n  // }\n\n  const loginForm = () => (\n    <Togglable buttonLabel='sign in' ref={loginFormRef}>\n      <LoginForm loginUser={handleLogin} />\n    </Togglable>\n  )\n\n  const blogForm = () => (\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\n      <BlogForm createBlog={createBlog} />\n    </Togglable>\n  )\n\n  // const filter = () => (\n  //   <Filter\n  //     setTitleToFind={setTitleToFind}\n  //     titleToFind={titleToFind}\n  //     handleFindTitleChange={handleFindTitleChange}\n  //   />\n  // )\n\n  return (\n    <>\n      <nav id='nav' className='navbar navbar-light bg-light'>\n        {/* <img src='/logo.png' width='50' height='35' className='d-inline-block align-top' alt=''/> */}\n        <strong>Bloglist</strong>\n\n        {user !== null ?\n          <div>\n            {user.name} logged in\n            <button className='btn btn-primary ml-2' id='logout-button' type='submit'\n              onClick={handleLogout}>\n              Logout\n            </button>\n          </div>\n          : loginForm()\n        }\n      </nav>\n\n      <div className='container'>\n        {/* <Message message={message} /> */}\n        <ErrorMessage message={errorMessage} />\n        {user !== null && blogForm()}\n        {user !== null &&\n        <div className='col-auto'>\n          <Filter />\n          <Blogs />\n        </div>\n        }\n        <Footer />\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>, document.getElementById('root')\n)\n"],"sourceRoot":""}
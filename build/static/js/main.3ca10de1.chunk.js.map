{"version":3,"sources":["services/blogs.js","reducers/blogReducer.js","reducers/messageReducer.js","reducers/filterReducer.js","store.js","services/login.js","components/LoginForm.js","components/Filter.js","components/Blog.js","hooks/index.js","components/BlogForm.js","components/Togglable.js","components/Blogs.js","components/Footer.js","App.js","index.js"],"names":["token","getAll","a","request","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","remove","console","log","delete","setToken","newToken","initializeBlogs","dispatch","blogService","blogs","type","createBlog","blog","newBlog","deleteBlog","deletedBlog","likeBlog","likes","returnedContent","changedBlog","state","find","n","findById","blogReducer","action","map","timeOutList","setMessage","text","time","forEach","tout","clearTimeout","messageChange","push","setTimeout","setErrorMessage","filterReducer","content","reducer","combineReducers","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","then","login","credentials","LoginForm","loginUser","useState","username","setUsername","password","setPassword","className","onSubmit","event","preventDefault","align","htmlFor","name","value","onChange","target","style","float","Filter","useDispatch","filterChange","Blog","props","useParams","display","visible","title","author","href","url","onClick","user","setVisible","history","goBack","window","location","reload","useField","form","setValue","BlogForm","setForm","newTitle","newAuthor","newUrl","marginTop","exception","Togglable","React","forwardRef","ref","scroller","require","animateScroll","hideWhenVisible","showWhenVisible","toggleVisibility","scrollToTop","useImperativeHandle","role","buttonLabel","children","displayName","compareLikes","b","mapDispatchToProps","connect","sort","toLowerCase","includes","useHistory","blogFormRef","useRef","blogForm","key","to","path","Footer","color","fontStyle","fontSize","App","useEffect","setUser","loginFormRef","loggedUserJSON","localStorage","getItem","JSON","parse","handleLogin","loginObject","loginService","setItem","stringify","handleLogout","clear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ca10de1.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const request = axios.get(baseUrl)\r\n  const response = await request\r\n  return response.data\r\n}\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.post(baseUrl, newObject, config)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  console.log('remove: ',id)\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken }\r\n","import blogService from '../services/blogs'\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blog) => {\r\n  return async dispatch => {\r\n    const newBlog = await blogService.create(blog)\r\n    dispatch({\r\n      type: 'NEW_BLOG',\r\n      data: newBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (id) => {\r\n  return async dispatch => {\r\n    const deletedBlog = await blogService.remove(id)\r\n    dispatch({\r\n      type: 'DELETE_BLOG',\r\n      data: deletedBlog\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const likeBlog = (blog) => {\r\n  return async dispatch => {\r\n    const returnedContent = await blogService.update(\r\n      blog.id, { ...blog, likes: blog.likes + 1 })\r\n    dispatch({\r\n      type: 'LIKE_BLOG',\r\n      data: returnedContent\r\n    })\r\n  }\r\n}\r\n\r\nconst findById = (state, id) => {\r\n  return state.find(n => n.id === id)\r\n}\r\n\r\nconst changedBlog = (state, id, likes) => {\r\n  return {\r\n    ...findById(state, id),\r\n    likes: likes\r\n  }\r\n}\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch(action.type) {\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  case 'NEW_BLOG':\r\n    return [...state, action.data]\r\n  case 'DELETE_BLOG':\r\n    console.log('deleteBlog: ',state, action.data)\r\n    return [...state, action.data]\r\n  case 'LIKE_BLOG':\r\n    return state.map(blog =>\r\n      blog.id !== action.data.id ? blog : changedBlog(state, action.data.id, action.data.likes)\r\n    )\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default blogReducer","let timeOutList = []\r\n\r\nexport const setMessage = (text, time) => {\r\n  timeOutList.forEach(tout => typeof tout === 'number' ? clearTimeout(tout) : tout)\r\n  return async dispatch => {\r\n    await dispatch(messageChange(text))\r\n    timeOutList.push(setTimeout(() => {\r\n      dispatch(messageChange(null))\r\n      timeOutList = []\r\n    }, 1000*time))\r\n  }\r\n}\r\n\r\nexport const messageChange = (text) => {\r\n  return {\r\n    type: 'SET_MESSAGE',\r\n    text\r\n  }\r\n}\r\n\r\nexport const setErrorMessage = (text, time) => {\r\n  timeOutList.forEach(tout => typeof tout === 'number' ? clearTimeout(tout) : tout)\r\n  return async dispatch => {\r\n    await dispatch(messageChange(text))\r\n    timeOutList.push(setTimeout(() => {\r\n      dispatch(messageChange(null))\r\n      timeOutList = []\r\n    }, 1000*time))\r\n  }\r\n}\r\n\r\nexport const errorMessageChange = (text) => {\r\n  return {\r\n    type: 'SET_ERRORMESSAGE',\r\n    text\r\n  }\r\n}\r\n\r\nconst messageReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'SET_MESSAGE':\r\n    return action.text\r\n  case 'SET_ERRORMESSAGE':\r\n    return action.text\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default messageReducer","export const filterChange = ( type, content ) => {\r\n  return {\r\n    type: 'SET_FILTER',\r\n    content\r\n  }\r\n}\r\n\r\nconst filterReducer = (state = 'ALL', action) => {\r\n  switch (action.type) {\r\n  case 'SET_FILTER':\r\n    return {\r\n      type: action.type,\r\n      content: action.content\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default filterReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport blogReducer, { initializeBlogs, createBlog, deleteBlog, likeBlog } from './reducers/blogReducer'\r\nimport { setMessage, setErrorMessage } from './reducers/messageReducer'\r\nimport filterReducer from './reducers/filterReducer'\r\nimport blogService from './services/blogs'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  setMessage,\r\n  setErrorMessage,\r\n  filter: filterReducer,\r\n  createBlog,\r\n  deleteBlog,\r\n  likeBlog\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nblogService.getAll().then(blogs =>\r\n  store.dispatch(initializeBlogs(blogs))\r\n)\r\n\r\nexport default store","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst LoginForm = ({ loginUser }) => {\r\n\r\n  LoginForm.propTypes = {\r\n    handleLogin: PropTypes.func.isRequired,\r\n    handleUsernameChange: PropTypes.func.isRequired,\r\n    handlePasswordChange: PropTypes.func.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    password: PropTypes.string.isRequired\r\n  }\r\n\r\n  const [ username, setUsername ] = useState('')\r\n  const [ password, setPassword ] = useState('')\r\n\r\n  const handleUsernameChange = (event) => { setUsername(event.target.value) }\r\n  const handlePasswordChange = (event) => { setPassword(event.target.value) }\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n    loginUser({\r\n      username: username,\r\n      password: password\r\n    })\r\n\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div className='form-group-inline'>\r\n      <form onSubmit={handleLogin}>\r\n        <div align='left' className='form-group-inline'>\r\n          <label id='formlabel' htmlFor='username'>username:</label>\r\n          <input id='username' type='text' className='form-control' name='Username'\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n          <label id='formlabel' htmlFor='password'>password:</label>\r\n          <input id='password' type='text' className='form-control' name='Password'\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button className='btn btn-primary' id='login-button' type='submit' style={{ float: 'left' }}>login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { filterChange } from '../reducers/filterReducer'\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (event) => {\r\n    event.preventDefault()\r\n    const content = event.target.value\r\n    dispatch(filterChange('SET_FILTER',content))\r\n  }\r\n\r\n  return (\r\n    <div className='col-auto'>\r\n      <form onChange={handleChange}>\r\n        <label htmlFor='filter'>filter shown with:</label>\r\n        <input name='filter' type='text' className='form-control' />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst Blog = ({ props }) => {\r\n  const id = useParams().id\r\n\r\n  const blog = props.blogs.find(n => n.id === id)\r\n\r\n  return(\r\n    <div style={{ display: props.visible ? 'none' : '' }}>\r\n      <br />\r\n      <li className='list-group-item'>\r\n        <b id='b-left'>{blog.title}</b>by<b id='b-right'>{blog.author}</b>\r\n      </li>\r\n      <br />\r\n      <li className='list-group-item'>\r\n        <a href={blog.url}>{blog.url}</a>\r\n      </li>\r\n      <li className='list-group-item'>\r\n        {blog.likes} likes\r\n        <button type='button' className='btn btn-success' id='like-button'\r\n          onClick={() => {\r\n            props.likeBlog({ ...blog, user: blog.user.id })\r\n            props.setMessage(`you liked '${blog.content}'`,5)\r\n          }}>like</button>\r\n      </li>\r\n      <li className='list-group-item'>\r\n        added by {blog.user.name}\r\n        { props.user.name === blog.user.name &&\r\n          <button type='button' id='delete-button' className='btn btn-warning'\r\n            onClick={() => {\r\n              props.setVisible(true)\r\n              props.history.goBack()\r\n              props.deleteBlog(id)\r\n              props.setMessage(`you deleted '${blog.content}'`,5)\r\n              window.location.reload()\r\n              props.initializeBlogs()\r\n            }}>delete</button>\r\n        }\r\n        <button type='button' id='back-button' className='btn btn-primary'\r\n          onClick={() => {\r\n            props.setVisible(true)\r\n            props.history.goBack()\r\n          }} >back\r\n        </button>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import { useState } from 'react'\r\n\r\nexport const useField = (form) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    form\r\n      ? setValue(event.target.value)\r\n      : setValue('')\r\n  }\r\n\r\n  return {\r\n    value,\r\n    onChange\r\n  }\r\n}","import React, { useState } from 'react'\r\n// import { connect } from 'react-redux'\r\n// import PropTypes from 'prop-types'\r\nimport { useField } from '../hooks'\r\nimport { createBlog } from '../reducers/blogReducer'\r\nimport { setMessage, setErrorMessage } from '../reducers/messageReducer'\r\n\r\nconst BlogForm = (props) => {\r\n  // console.log('props: ',props)\r\n  // console.log('createBlog: ',props.createBlog)\r\n  // console.log('setMessage: ',props.setMessage)\r\n  // console.log('setErrorMessage: ',props.setErrorMessage)\r\n\r\n  // BlogForm.propTypes = {\r\n    // addBlog: PropTypes.func.isRequired,\r\n    // handleTitleChange: PropTypes.func.isRequired,\r\n    // handleUrlChange: PropTypes.func.isRequired,\r\n    // handleAuthorChange: PropTypes.func.isRequired,\r\n  //   newTitle: PropTypes.string.isRequired,\r\n  //   newUrl: PropTypes.string.isRequired\r\n  // }\r\n\r\n  const [ form, setForm ] = useState(true)\r\n\r\n  const newTitle = useField(form)\r\n  const newAuthor = useField(form)\r\n  const newUrl = useField(form)\r\n\r\n  const handleSubmit = (event) => {\r\n    console.log('createBlog: ',props)\r\n    event.preventDefault()\r\n    setForm(true)\r\n\r\n    const newBlog = {\r\n      title: newTitle.value,\r\n      author: newAuthor.value,\r\n      url: newUrl.value,\r\n      user: props.user.name\r\n    }\r\n\r\n    try {\r\n      createBlog(newBlog)\r\n    } catch (exception) {\r\n      setErrorMessage(`error: \\`${exception}\\``,5)\r\n    }\r\n\r\n    setMessage(`added \\`${newTitle}\\``,5)\r\n  }\r\n\r\n  return (\r\n    <div className='col-auto' id='boxed' style={{ display: props.visible ? '' : 'none' }}>\r\n      <br />\r\n      <b>Add a new blog</b>\r\n      <form>\r\n        <div align='left' className='form-group'>\r\n          <label id='formlabel'>title:</label>\r\n          <input className='form-control' {...newTitle} />\r\n        </div>\r\n        <div align='left' className='form-group'>\r\n          <label id='formlabel'>author:</label>\r\n          <input className='form-control' {...newAuthor} />\r\n        </div>\r\n        <div align='left' className='form-group'>\r\n          <label id='formlabel'>url:</label>\r\n          <input className='form-control' {...newUrl} />\r\n        </div>\r\n        <div align='left' className='form-group'>\r\n          <button className='btn btn-primary' id='add-button' type='submit'\r\n            style={{ float: 'left', marginTop: '12px' }}\r\n            onClick={handleSubmit}>\r\n            add\r\n          </button>\r\n          <button className='btn btn-primary' id='reset-button' type='submit'\r\n            style={{ float: 'left', marginTop: '12px' }}\r\n            onClick={() => {\r\n              setForm(false)\r\n            }}>\r\n            reset\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n\r\n  Togglable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n  }\r\n\r\n  const Scroll = require('react-scroll')\r\n  const scroller = Scroll.animateScroll\r\n\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n    if (visible) {\r\n      scroller.scrollToTop()\r\n    }\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className='btn-group' role='group'>\r\n      <div style={hideWhenVisible}>\r\n        <button className='btn btn-primary'type='submit'\r\n          onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className='togglableContent'>\r\n        {props.children}\r\n        <button className='btn btn-primary'type='submit' style={{ float: 'right' }}\r\n          onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import React, { useState, useRef } from 'react'\r\nimport { Switch, Route, Link, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Filter from './Filter'\r\nimport Blog from './Blog'\r\nimport BlogForm from './BlogForm'\r\nimport Togglable from './Togglable'\r\nimport { initializeBlogs, createBlog, likeBlog, deleteBlog } from '../reducers/blogReducer'\r\nimport { setMessage, setErrorMessage } from '../reducers/messageReducer'\r\n\r\nconst Blogs = (props) => {\r\n\r\n  const history = useHistory()\r\n  // const [ fromCreate, setFromCreate ] = useState(true)\r\n  const [ visible, setVisible ] = useState(true)\r\n  // const hideWhenForm = { display: visible ? '' : 'none' }\r\n  const blogFormRef = useRef()\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel='create new' ref={blogFormRef}>\r\n      <BlogForm\r\n        createBlog={{ createBlog }}\r\n        setMessage={{ setMessage }}\r\n        setErrorMessage={{ setErrorMessage }}\r\n        user={props.user}\r\n        setVisible={setVisible}\r\n        blogForm={blogForm}\r\n        onClick={() => {\r\n          setVisible(false)\r\n          // setFromCreate(false)\r\n        }}\r\n        visible={visible} />\r\n    </Togglable>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: visible ? '' : 'none' }}>\r\n        <Filter />\r\n        <h2>Blogs</h2>\r\n        <div>\r\n          {/* <Link to='/create'\r\n            onClick={() => {\r\n              setFromCreate(true)\r\n              history.push('/blogs')\r\n            }}>add new blog\r\n          </Link> */}\r\n          {props.user !== null// && fromCreate === true\r\n            ? blogForm()\r\n            : null\r\n          }\r\n        </div>\r\n        <div >\r\n          <ul>\r\n            {props.blogs.map(blog =>\r\n              <li id='boxed' className='list-group-item' key={blog.id}>\r\n                <Link\r\n                  to={`/blogs/${blog.id}`}\r\n                  onClick={() => {\r\n                    setVisible(false)\r\n                    // setFromCreate(false)\r\n                    history.push('/blogs')\r\n                  }}\r\n                >\r\n                  {blog.title}\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <Switch>\r\n        {/* <Route path='/create'>\r\n          {console.log('user: ',props.user !== null,fromCreate === true)}\r\n          {fromCreate === true\r\n            ? <BlogForm createBlog={createBlog} setFromCreate={setFromCreate} />\r\n            : <Redirect to=\"/\"/>\r\n          }\r\n        </Route> */}\r\n        <Route path='/blogs/:id'>\r\n          <Blog\r\n            props={{\r\n              ...props,\r\n              setVisible,\r\n              initializeBlogs,\r\n              visible,\r\n              history\r\n            }}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction compareLikes(a, b) {\r\n  return b.likes - a.likes\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  if ( state.filter === 'ALL' ) {\r\n    return { blogs: state.blogs.sort(compareLikes) }\r\n  } else if ( state.filter === 'SET_FILTER' ) {\r\n    return {\r\n      blogs: state.blogs.filter(blog => blog.title.toLowerCase()\r\n        .includes(state.filter.content.toLowerCase())).sort(compareLikes)\r\n    }\r\n  }\r\n  return { blogs: state.blog }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  initializeBlogs,\r\n  likeBlog,\r\n  deleteBlog,\r\n  createBlog,\r\n  setMessage,\r\n  setErrorMessage\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Blogs)","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'gray',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <hr />\r\n      <center>\r\n        <em>Bloglist app, Full Stack Web Development</em>\r\n        <br />\r\n        <em>University of Helsinki 2020</em>\r\n      </center>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect, useRef } from 'react'\nimport { Switch, Route, Link } from 'react-router-dom'\n\nimport { setErrorMessage } from './reducers/messageReducer'\nimport { useDispatch } from 'react-redux'\nimport { initializeBlogs } from './reducers/blogReducer'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport LoginForm from './components/LoginForm'\n\nimport Blogs from './components/Blogs'\nimport Footer from './components/Footer'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  const [ user, setUser ] = useState(null)\n\n  const loginFormRef = useRef()\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (loginObject) => {\n    if (loginObject.username === '' || loginObject.password === '') {\n      setErrorMessage('both fields are required',5)\n    } else {\n      try {\n        const user = await loginService.login(loginObject)\n        window.localStorage.setItem('loggedBloglistappUser', JSON.stringify(user))\n        blogService.setToken(user.token)\n        setUser(user)\n      } catch (exception) {\n        setErrorMessage('wrong username or password',5)\n      }\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    try {\n      setUser(null)\n      window.localStorage.clear()\n    } catch (exception) {\n      setErrorMessage(`${exception}`,5)\n    }\n    window.location.reload()\n    console.log('logged out successfully')\n  }\n\n  // const handleFindTitleChange = (event) => { setShowTitleToFind(event.target.value) }\n  // const setTitleToFind = (event) => {\n  //   event.preventDefault()\n  //   if (titleToFind!=='') {\n  //     setShowAll(false)\n  //   }\n  // }\n\n  // function compareNumbers(a, b) {\n  //   return b.likes - a.likes\n  // }\n\n  // const blogsToShow = showAll\n  //   ? blogs.sort(compareNumbers)\n  //   : blogs.filter(blog => blog.title.toLowerCase()\n  //     .includes(titleToFind.toLowerCase())).sort(compareNumbers)\n\n  // const rows = () => blogsToShow.map(blog =>\n  //   <Blog\n  //     key={blog.id}\n  //     user={user}\n  //     blog={blog}\n  //     likeBlog={() => likeBlogOf(blog.id)}\n  //     deleteBlog={() => deleteBlogOf(blog.id)}\n  //   />\n  // )\n\n  // const addBlog = (blogObject) => {\n  //   blogFormRef.current.toggleVisibility()\n  //   blogService\n  //     .create(blogObject)\n  //     .then(() => {\n  //       blogService\n  //         .getAll()\n  //         .then(blogs => {\n  //           setBlogs(blogs)\n  //         })\n  //     }, [])\n  //     .catch(() => {\n  //       setErrorMessage('fields title and url are required, url must be unique')\n  //       setTimeout(() => {\n  //         setErrorMessage(null)\n  //       }, 4000)\n  //     })\n  //   setMessage(`added \\`${blogObject.title}\\``)\n  //   setTimeout(() => {\n  //     setMessage(null)\n  //   }, 4000)\n  // }\n\n  // const likeBlogOf = (id) => {\n  //   const blog = blogs.find(n => n.id === id)\n  //   const changedBlog = {\n  //     user: blog.user.id,\n  //     likes: blog.likes + 1,\n  //     author: blog.author,\n  //     title: blog.title,\n  //     url: blog.url\n  //   }\n\n  //   blogService\n  //     .update(blog.id, changedBlog)\n  //     .then(returnedBlog => {\n  //       setBlogs(blogs.map(\n  //         oldblog => oldblog.id !== blog.id\n  //           ? oldblog\n  //           : returnedBlog\n  //       ))\n  //     })\n  //     .catch(error => {\n  //       scroller.scrollToTop()\n  //       setErrorMessage(`${error}`)\n  //       setTimeout(() => {\n  //         setErrorMessage(null)\n  //       }, 4000)\n  //       setBlogs(blogs.filter(n => n.id !== blog.id))\n  //     })\n  // }\n\n  // const deleteBlogOf = id => {\n  //   const blog = blogs.find(n => n.id === id)\n\n  //   if (window.confirm(`Delete \\`${blog.title}\\`?`)) {\n  //     blogService\n  //       .remove(id, blog)\n  //       .then(() => {\n  //         setBlogs(blogs.filter(n => n.id !== id))\n  //         scroller.scrollToTop()\n  //         setMessage(`deleted \\`${blog.title}\\``)\n  //         setTimeout(() => {\n  //           setMessage(null)\n  //         }, 4000)\n  //       })\n  //       .catch(error => {\n  //         scroller.scrollToTop()\n  //         setErrorMessage(`${error}`)\n  //         setTimeout(() => {\n  //           setErrorMessage(null)\n  //         }, 4000)\n  //       })\n  //   }\n  // }\n\n  const loginForm = () => (\n    <Togglable buttonLabel='sign in' ref={loginFormRef}>\n      <LoginForm loginUser={handleLogin} />\n    </Togglable>\n  )\n\n  return (\n    <>\n      <nav id='nav' className='navbar navbar-light bg-light'>\n        {/* <img src='/logo.png' width='50' height='35' className='d-inline-block align-top' alt=''/> */}\n        <a className=\"navbar-brand\" href=\"/\"><strong>Bloglist</strong></a>\n\n        {user !== null ?\n          <>\n            <div>\n              <Link to='/blogs' >blogs</Link>\n            </div>\n            <div>\n              <Link to='/users' >users</Link>\n            </div>\n            <div>\n              {user.name} logged in\n              <button className='btn btn-primary ml-2' id='logout-button' type='submit'\n                onClick={handleLogout}>\n                Logout\n              </button>\n            </div>\n          </>\n          : loginForm()\n        }\n      </nav>\n\n      <div className='container'>\n        <Switch>\n          <Route path='/blogs'>\n            {user !== null\n              ? <Blogs user={user} />\n              : null\n            }\n          </Route>\n          <Route path='/users'>\n\n          </Route>\n        </Switch>\n\n        {/* <Message message={message} /> */}\n        {/* <ErrorMessage message={errorMessage} />\n        {user !== null && blogForm()} */}\n        {/* {user !== null &&\n        <div className='col-auto'>\n          <Blogs user={user}/>\n        </div>\n        } */}\n        <Footer />\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>, document.getElementById('root')\n)\n"],"sourceRoot":""}
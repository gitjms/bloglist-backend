{"version":3,"sources":["components/ErrorMessage.js","components/Message.js","services/blogs.js","components/BlogForm.js","components/Blog.js","components/Blogs.js","components/Filter.js","components/Togglable.js","services/login.js","components/LoginForm.js","components/Footer.js","App.js","index.js"],"names":["ErrorMessage","message","className","style","color","background","fontSize","borderStyle","borderRadius","padding","marginTop","marginBottom","Message","token","getAll","a","request","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","remove","delete","setToken","newToken","BlogForm","createBlog","useState","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","onSubmit","event","preventDefault","title","author","url","align","htmlFor","type","value","onChange","target","float","Blog","blog","likeBlog","deleteBlog","console","log","visible","setVisible","hideWhenVisible","display","showWhenVisible","width","href","onClick","likes","paddingLeft","marginLeft","user","name","Blogs","rows","Filter","titleToFind","setTitleToFind","handleFindTitleChange","Togglable","React","forwardRef","props","ref","scroller","require","animateScroll","toggleVisibility","scrollToTop","useImperativeHandle","role","buttonLabel","children","login","credentials","LoginForm","loginUser","username","setUsername","password","setPassword","autoFocus","Footer","fontStyle","App","blogs","setBlogs","showAll","setShowAll","setShowTitleToFind","errorMessage","setErrorMessage","setMessage","setUser","blogFormRef","useRef","loginFormRef","useEffect","blogService","then","initialBlogs","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","loginObject","current","setTimeout","loginService","setItem","stringify","handleLogout","clear","exception","blogsToShow","filter","toLowerCase","includes","addBlog","blogObject","createdBlog","concat","catch","error","likeBlogOf","find","n","changedBlog","returnedBlog","map","oldblog","deleteBlogOf","confirm","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d7ac739.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n    const errorMessageStyle = {\r\n        color: 'red',\r\n        background: 'lightgray',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginTop: 10,\r\n        marginBottom: 10\r\n    }\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\" style={errorMessageStyle} >\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import React from 'react'\r\n\r\nconst Message = ({ message }) => {\r\n    const messageStyle = {\r\n        color: 'green',\r\n        background: 'lightgray',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginTop: 10,\r\n        marginBottom: 10\r\n    }\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"message\" style={messageStyle} >\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const request = axios.get(baseUrl)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.post(baseUrl, newObject, config)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst remove = async id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nexport default {getAll, create, update, remove, setToken}\r\n","import React, {useState} from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n\r\n    const [ newTitle, setNewTitle ] = useState('')\r\n    const [ newAuthor, setNewAuthor ] = useState('')\r\n    const [ newUrl, setNewUrl ] = useState('')\r\n\r\n    const handleTitleChange = (event) => { setNewTitle(event.target.value) }\r\n    const handleAuthorChange = (event) => { setNewAuthor(event.target.value) }\r\n    const handleUrlChange = (event) => { setNewUrl(event.target.value) }\r\n\r\n    const addBlog = (event) => {\r\n        event.preventDefault()\r\n        createBlog({\r\n            title: newTitle,\r\n            author: newAuthor,\r\n            url: newUrl\r\n        })\r\n\r\n        setNewTitle('')\r\n        setNewAuthor('')\r\n        setNewUrl('')\r\n    }\r\n\r\n    return (\r\n        <div className='col-auto' id='boxed'>\r\n        <br />\r\n        <b>Add a new blog</b>\r\n        <form onSubmit={addBlog}>\r\n            <div align='left' className='form-group'>\r\n                <label id='formlabel' htmlFor='title'>title:</label>\r\n                <input id='title' type='text' className='form-control'\r\n                    value={newTitle}\r\n                    onChange={handleTitleChange}\r\n                />\r\n            </div>\r\n            <div align='left' className='form-group'>\r\n                <label id='formlabel' htmlFor='author'>author:</label>\r\n                <input id='author' type='text' className='form-control'\r\n                    value={newAuthor}\r\n                    onChange={handleAuthorChange}\r\n                />\r\n            </div>\r\n            <div align='left' className='form-group'>\r\n                <label id='formlabel' htmlFor='url'>url:</label>\r\n                <input id='url' type='text' className='form-control'\r\n                    value={newUrl}\r\n                    onChange={handleUrlChange}\r\n                />\r\n            </div>\r\n            <div align='left' className='form-group'>\r\n                <button className='btn btn-primary' type='submit' style={{float: \"left\"}}>\r\n                    add\r\n                </button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogForm\r\n","import React, {useState} from 'react'\r\n\r\n\r\nconst Blog = ({ blog,likeBlog,deleteBlog }) => {\r\n\r\n  console.log(blog)\r\n\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  return (\r\n    <>\r\n    <div style={hideWhenVisible} id='boxed'>\r\n      <li className='list-group-item'>\r\n        <table>\r\n        <tbody>\r\n          <tr>\r\n          <td style={{width: '220px'}}><em><a href={blog.url}>{blog.title}</a></em></td>\r\n          <td style={{width: '160px'}}><em>{blog.author}</em></td>\r\n          <td style={{width: '60px'}}><button type='button' className='btn btn-primary'\r\n          value={true}\r\n          onClick={() => setVisible(true)}>view</button>\r\n          </td>\r\n          <td style={{width: '60px'}}>\r\n          </td>\r\n          </tr>\r\n        </tbody>\r\n        </table>\r\n      </li>\r\n    </div>\r\n    <div style={showWhenVisible} id='boxed'>\r\n      <li className='list-group-item'>\r\n        <table>\r\n        <tbody>\r\n          <tr>\r\n          <td style={{width: '220px'}}><em><a href={blog.url}>{blog.title}</a></em></td>\r\n          <td style={{width: '160px'}}><em>{blog.author}</em></td>\r\n          <td style={{width: '60px'}}><button type='button' className='btn btn-primary'\r\n          value={true}\r\n          onClick={() => setVisible(false)}>hide</button>\r\n          </td>\r\n          <td style={{width: '60px'}}><button type='button' className='btn btn-warning'\r\n          onClick={deleteBlog}>delete</button>\r\n          </td>\r\n          </tr>\r\n        </tbody>\r\n        </table>\r\n      </li>\r\n      <li className='list-group-item'>\r\n        {blog.url}\r\n      </li>\r\n      <li className='list-group-item'>\r\n        <div>\r\n          Likes: {blog.likes}\r\n          <button type='button' className='btn btn-success' id='listbtnlike'\r\n            style={{paddingLeft: '10px', width: '60px', marginLeft: '10px'}} onClick={likeBlog}>+1</button>\r\n        </div>\r\n      </li>\r\n      <li className='list-group-item'>\r\n        {blog.user.name}\r\n      </li>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\n\r\nconst Blogs = ({rows}) => {\r\n\r\n    return (\r\n        <div>\r\n            <b>Blogs</b>\r\n            {rows}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blogs","import React from 'react'\r\n\r\nconst Filter = ({titleToFind,setTitleToFind,handleFindTitleChange}) => {\r\n    return (\r\n        <form onChange={setTitleToFind}>\r\n            <div align=\"left\">\r\n                <label htmlFor=\"filter\">filter shown with:</label>\r\n                <input id=\"filter\" type=\"text\" className=\"form-control\"\r\n                    value={titleToFind}\r\n                    onChange={handleFindTitleChange}\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Filter","import React, {useState, useImperativeHandle} from 'react'\r\n\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n\r\n  const Scroll = require('react-scroll')\r\n  const scroller = Scroll.animateScroll\r\n\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n    if (visible) {\r\n      scroller.scrollToTop()\r\n    }\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className='btn-group' role=\"group\">\r\n      <div style={hideWhenVisible}>\r\n        <button className='btn btn-primary'type='submit'\r\n          onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button className='btn btn-primary'type='submit' style={{float: \"right\"}}\r\n          onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, {useState} from 'react'\r\n\r\n\r\nconst LoginForm = ({ loginUser }) => {\r\n\r\n  const [ username, setUsername ] = useState('') \r\n  const [ password, setPassword ] = useState('') \r\n\r\n  const handleUsernameChange = (event) => { setUsername(event.target.value) }\r\n  const handlePasswordChange = (event) => { setPassword(event.target.value) }\r\n  \r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n    loginUser({\r\n      username: username,\r\n      password: password\r\n    })\r\n\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div className='form-group-inline'>\r\n      <form onSubmit={handleLogin}>\r\n        <div align='left' className='form-group-inline'>\r\n          <label id='formlabel' htmlFor='username'>username:</label>\r\n          <input autoFocus id='username' type='text' className='form-control' name='Username'\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n          <label id='formlabel' htmlFor='password'>password:</label>\r\n          <input id='password' type='text' className='form-control' name='Password'\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button className='btn btn-primary' type='submit' style={{float: \"left\"}}>login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'gray',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <hr />\r\n      <center>\r\n      <em>Bloglist app, Full Stack Web Development</em>\r\n      <br />\r\n      <em>University of Helsinki 2020</em>\r\n      </center>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, {useState, useEffect, useRef} from 'react'\nimport ErrorMessage from './components/ErrorMessage'\nimport Message from './components/Message'\nimport blogService from './services/blogs'\nimport BlogForm from './components/BlogForm'\nimport Blog from './components/Blog'\nimport Blogs from './components/Blogs'\nimport Filter from './components/Filter'\nimport Togglable from './components/Togglable'\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm'\n// import userService from './services/users'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  const [ blogs, setBlogs ] = useState([])\n  const [ showAll, setShowAll ] = useState(true)\n  const [ titleToFind, setShowTitleToFind ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ message, setMessage ] = useState(null)\n  const [ user, setUser ] = useState(null)\n  // const [ blogUsers, setBlogUsers ] = useState(null)\n\n  const blogFormRef = useRef()\n  const loginFormRef = useRef()\n\n  const Scroll = require('react-scroll')\n  const scroller = Scroll.animateScroll\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(initialBlogs => {\n        setBlogs(initialBlogs)\n      })\n  }, [])\n\n  // useEffect(() => {\n  //   userService\n  //     .getAll()\n  //     .then(initialUsers => {\n  //       setBlogUsers(initialUsers)\n  //     })\n  // }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (loginObject) => {\n    loginFormRef.current.toggleVisibility()\n    console.log(loginObject)\n    if (loginObject.username === \"\" || loginObject.password === \"\") {\n      setErrorMessage(\n        `both fields are required`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 4000)\n    } else {\n      try {\n        const user = await loginService.login(loginObject)\n        window.localStorage.setItem(\n          'loggedBloglistappUser', JSON.stringify(user)\n        )\n        blogService.setToken(user.token)\n        setUser(user)\n      } catch (exception) {\n        setErrorMessage('wrong username or password')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 4000)\n      }\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    try {\n      setUser(null)\n      window.localStorage.clear()\n    } catch (exception) {\n      setErrorMessage(`${exception}`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 4000)\n    }\n    console.log('logged out successfully')\n  }\n\n  const handleFindTitleChange = (event) => { setShowTitleToFind(event.target.value) }\n  const setTitleToFind = (event) => {\n    event.preventDefault()\n    if (titleToFind!=='') {\n      setShowAll(false)\n    }\n  }\n\n  const blogsToShow = showAll\n    ? blogs\n    : blogs.filter(blog => blog.title.toLowerCase().includes(titleToFind.toLowerCase()))\n\n  const rows = () => blogsToShow.map(blog =>\n    <Blog\n      key={blog.id}\n      blog={blog}\n      likeBlog={() => likeBlogOf(blog.id)}\n      deleteBlog={() => deleteBlogOf(blog.id)}\n    />\n  )\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(createdBlog => {\n        setBlogs(blogs.concat(createdBlog))\n        setMessage(\n        `added ${blogObject.title} by ${blogObject.author}`\n        )\n        setTimeout(() => {\n        setMessage(null)\n        }, 4000)\n      })\n      .catch((error) => {\n          setErrorMessage(\n              `${error}, all fields are required`\n          )\n          setTimeout(() => {\n          setErrorMessage(null)\n          }, 4000)\n      })\n  }\n\n  const likeBlogOf = id => {\n    const blog = blogs.find(n => n.id === id)\n    // const blogUser = await blogUsers.find(n => n.name === blog.user.name)\n    const changedBlog = {\n      user: blog.user.id,\n      likes: blog.likes + 1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    }\n    console.log(changedBlog)\n    \n    blogService\n      .update(blog.id, changedBlog)\n      .then(returnedBlog => {\n        setBlogs(blogs.map(\n          oldblog => oldblog.likes !== blog.likes\n            ? oldblog\n            : returnedBlog\n          )\n        )\n      })\n      .catch(error => {\n        scroller.scrollToTop()\n        setErrorMessage(`${error}`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 4000)\n        setBlogs(blogs.filter(n => n.id !== blog.id))\n      })\n  }\n\n  const deleteBlogOf = id => {\n    const blog = blogs.find(n => n.id === id)\n    \n     if (window.confirm(`Delete \\`${blog.title}\\`?`)) {\n      blogService\n      .remove(id, blog)\n      .then(() => {\n        setBlogs(blogs.filter(n => n.id !== id))\n        scroller.scrollToTop()\n        setMessage(\n          `deleted \\`${blog.title}\\``\n        )\n        setTimeout(() => {\n          setMessage(null)\n        }, 4000)\n      })\n      .catch(error => {\n        scroller.scrollToTop()\n        setErrorMessage(`${error}`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 4000)\n      })\n     }\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel='sign in' ref={loginFormRef}>\n      <LoginForm loginUser={handleLogin} />\n    </Togglable>\n  )\n\n  const blogForm = () => (\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\n      <BlogForm createBlog={addBlog} />\n    </Togglable>\n  )\n\n  const filter = () => (\n    <Filter \n      setTitleToFind={setTitleToFind}\n      titleToFind={titleToFind}\n      handleFindTitleChange={handleFindTitleChange}\n    />\n  )\n\n  return (\n  <>\n\t  <nav id='nav' className='navbar navbar-light bg-light'>\n      {/* <img src='/logo.png' width='50' height='35' className='d-inline-block align-top' alt=''/> */}\n      <strong>Bloglist</strong>\n      \n      {user !== null ?\n      <div>\n        {user.name} logged in\n        <button className='btn btn-primary ml-2' type='submit' onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n      : loginForm()\n      }\n    </nav>\n\n    <div className='container'>\n      <Message message={message} />\n      <ErrorMessage message={errorMessage} />\n      {user !== null && blogForm()}\n      {user !== null &&\n        <div className='col-auto'>\n          {filter()}\n          <br />\n          <Blogs rows={rows()}/>\n        </div>\n      }\n      <Footer />\n    </div>\n  </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css';\n\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}